<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--sql隔离，对sql进行分类化管理
使用Mapper代理方法开发，namespace有特殊的重要作用
-->
<mapper namespace="com.wbz.mapper.OrdersMapperCustomer">
    <!--定义关联查询用户的resultmap
        将整个查询结果映射到com.wbz.po.Orders中
    -->

    <resultMap id="OrdersUserResultMap" type="com.wbz.po.Orders">
            <!--配置映射的订单信息 column对应数据库中的唯一标识的列
            如果有多个列组成唯一标示，就需要配置多个id,property对象Orders.java中的id属性-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>

        <!--用于配置映射的关联的用户信息-->
        <!--
        association用于映射关联查询单个对象的信息
        property:要将关联查询的用户信息映射到Orders.java的哪个属性中
        -->
        <association property="user" javaType="com.wbz.po.User">
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
            <result column="birthday" property="birthday"/>
        </association>
    </resultMap>


    <!--使用extends之后就不用配置重复的订单信息和用户信息-->
    <resultMap id="OrdersAndOrderDetailResultMap" type="com.wbz.po.Orders" extends="OrdersUserResultMap">

        <!--订单明细信息  一个订单关联查询除了多条明细，要使用collection进行映射
        collection：对关联查询到的多条记录映射到集合对象中，
        property：将关联的查询到多条记录映射到哪个属性中
        ofType:指定映射到list属性中pojo的类型
        -->
        <collection property="orderdetails" ofType="com.wbz.po.Orderdetail">
            <!--property要将订单明细的唯一标识映射到orderdetail的哪个属性-->
            <id column="ordersdetailid" property="id"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
            <result column="orders_id" property="ordersId"/>
        </collection>
    </resultMap>
    <!--查询用户及购买的商品信息-->
    <resultMap id="UserAndItemsResultMap" type="com.wbz.po.User">
        <!--用户信息-->
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>

        <!--订单信息
        一个用户对应多个订单，使用collection映射
        -->
        <collection property="orderslist" ofType="com.wbz.po.Orders">
            <id column="id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
            <result column="note" property="note"/>
            <!--订单明细
            一个订单包括多个明细
            -->
            <collection property="orderdetails" ofType="com.wbz.po.Orderdetail">
                <id column="ordersdetailid" property="id"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <result column="orders_id" property="ordersId"/>

                <!--商品信息
                一个订单明细对应一个商品
                -->
                <association property="items" javaType="com.wbz.po.Items">
                        <id column="id" property="id"/>
                        <result column="item_name" property="name"/>
                        <result column="item_price" property="price"/>
                        <result column="item_detail" property="detail"/>
                </association>
            </collection>

            
        </collection>

    </resultMap>


    <!--查询订单关联查询用户信息 -->
    <select id="findOrdersUser" resultType="com.wbz.po.OrdersCustomer">
        SELECT orders.*,user.`username`,user.`sex`,user.`address` FROM orders,USER WHERE orders.`user_id` = user.id;
    </select>

    <!--查询订单关联查询用户信息 使用resultmap-->
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT orders.*,user.`username`,user.`sex`,user.`address` FROM orders,USER WHERE orders.`user_id` = user.id;
    </select>

    <!--查询订单关联查询用户及订单明细，使用resultmap   使用resulttype就会出现重复的查询结果-->
    <select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
        SELECT orders.*,user.`username`,user.`sex`,user.`birthday`,user.`address`,orderdetail.`id` ordersdetailid,orderdetail.orders_id,orderdetail.items_num
        FROM orders,USER,orderdetail WHERE orders.`user_id` = user.id AND orders.`id`=orderdetail.`orders_id`;
    </select>

    <!--查询用户及用户购买商品信息-->
    <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
        SELECT orders.*,user.`username`,user.`sex`,user.`birthday`,user.`address`,orderdetail.`id` ordersdetailid,orderdetail.orders_id,orderdetail.items_num,items.`name` items_name,items.`price`items_price,items.`detail` items_detail
        FROM orders,USER,orderdetail,items WHERE orders.`user_id` = user.id AND orders.`id`=orderdetail.`orders_id`
        AND orderdetail.`items_id`=items.`id`;
    </select>



<!--延迟加载的使用
mybatis默认没有开启延迟加载，需要在sqlmap.xml的setting中开启
-->
    <!--延迟加载的resultmap-->
    <resultMap id="OrdersUserLazyLoadingResultMap" type="com.wbz.po.Orders">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>

        <!--实现对用户信息的延迟加载
        select:指定延迟加载需要执行的sql语句的id(根据user_id查询用户信息的语句)
        column:订单信息中关联用户信息查询的列，是user_id
        因为这个mapper不在本mapper中，需要加上namespace
        -->
        <association property="user" column="user_id" select="com.wbz.mapper.UserMapper.findUserById" javaType="com.wbz.po.User">
        </association>
    </resultMap>

    <!--查询订单关联查询用户，用户信息需要延迟加载-->
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
        select * from orders
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--加载属性文件-->
    <properties resource="com/wbz/config/db.properties"/>

    <!--全局配置参数，需要时在设置
    <settings>
        <setting name="" value=""/>
    </settings>-->

    <!--别名定义-->
    <typeAliases>
        <!--单个别名的定义-->
        <!--<typeAlias type="com.wbz.po.User" alias="user"/>-->
        
        <!--批量定义别名  mybatis自动扫描包中的po类，自动定义别名，别名就是类型（首字母大小写都可以）-->
        <package name="com.wbz.po"/>
    </typeAliases>

    <!-- 和spring整合后 environments配置将废除-->
    <environments default="development">
        <environment id="development">
            <!-- 使用jdbc事务管理 事务控制由mybatis-->
            <transactionManager type="JDBC" />
            <!-- 数据库连接池  由mybatis管理-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />
            </dataSource>
        </environment>
    </environments>
    <!--加载映射文件-->
    <mappers>
        <!--通过resource一次加载一个文件-->
        <!-- <mapper resource="com/wbz/config/User.xml"/>
        <mapper resource="com/wbz/config/UserMapper.xml"/>-->

<!--通过mapper接口加载映射文件，遵循一些规范，需要将mapper接口类名和mapper.xml映射文件名保持一致，并且是在一个目录中，而且是使用的mapper代理方法
        <mapper class="com.wbz.mapper.UserMapper"/>-->

<!--批量加载mapper 指定mapper接口的包名,mabatis自动扫描包下面的所有mapper接口（推荐使用）-->
        <package name="com.wbz.mapper"/>
    </mappers>
</configuration>
